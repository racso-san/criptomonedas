{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitKraken/criptomonedas/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport imagen from './cryptomonedas.png';\nimport axios from 'axios';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width:992px) {\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    column-gap: 2rem;\n  }\n`;\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-top:80px;\n\n  &::after {\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n  useEffect(() => {\n    const cotizarCriptomoneda = async () => {\n      // Evitamos la ejecucion la primera vez\n      if (moneda === '') return;\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url); // Mostrar spinner\n\n      guardarCargando(true);\n      setTimeout(() => {\n        // Ocultar spinner\n        guardarCargando(false);\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 2000);\n    };\n\n    cotizarCriptomoneda();\n  }, [moneda, criptomoneda]); // Mostrar spinner o resultado\n\n  const componente = cargando ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(Cotizacion, {\n    resultado: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 49\n    }\n  });\n  return /*#__PURE__*/React.createElement(Contenedor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Imagen, {\n    src: imagen,\n    alt: \"imagen cripto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Cotizador de Criptomonedas al instante\"), /*#__PURE__*/React.createElement(Formulario, {\n    guardarMoneda: guardarMoneda,\n    guardarCriptomoneda: guardarCriptomoneda,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), componente));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/usuario/Documentos/GitKraken/criptomonedas/src/App.js"],"names":["React","useState","useEffect","styled","imagen","axios","Formulario","Cotizacion","Spinner","Contenedor","div","Imagen","img","Heading","h1","App","moneda","guardarMoneda","criptomoneda","guardarCriptomoneda","resultado","guardarResultado","cargando","guardarCargando","cotizarCriptomoneda","url","get","setTimeout","data","DISPLAY","componente"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;;;;;;;;CAA9B;AAUA,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAI;;;CAA1B;AAKA,MAAMC,OAAO,GAAGV,MAAM,CAACW,EAAG;;;;;;;;;;;;;;;CAA1B;;AAiBA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAAQC,aAAR,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACiB,YAAD,EAAcC,mBAAd,IAAqClB,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACmB,SAAD,EAAWC,gBAAX,IAA+BpB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACqB,QAAD,EAAUC,eAAV,IAA6BtB,QAAQ,CAAC,KAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMsB,mBAAmB,GAAG,YAAY;AACtC;AACA,UAAGR,MAAM,KAAG,EAAZ,EAAgB;AAEhB,YAAMS,GAAG,GAAI,+DAA8DP,YAAa,UAASF,MAAO,EAAxG;AACA,YAAMI,SAAS,GAAG,MAAMf,KAAK,CAACqB,GAAN,CAAUD,GAAV,CAAxB,CALsC,CAOtC;;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AAEAI,MAAAA,UAAU,CAAC,MAAM;AACf;AACAJ,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,gBAAgB,CAACD,SAAS,CAACQ,IAAV,CAAeC,OAAf,CAAuBX,YAAvB,EAAqCF,MAArC,CAAD,CAAhB;AACD,OAJS,EAIP,IAJO,CAAV;AAMD,KAhBD;;AAiBAQ,IAAAA,mBAAmB;AAEpB,GArBQ,EAqBN,CAACR,MAAD,EAASE,YAAT,CArBM,CAAT,CAPa,CA8Bb;;AACA,QAAMY,UAAU,GAAIR,QAAD,gBAAa,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,gBAA2B,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C;AAEA,sBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEhB,MADP;AAEE,IAAA,GAAG,EAAC,eAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADH,eAGG,oBAAC,UAAD;AACE,IAAA,aAAa,EAAEa,aADjB;AAEE,IAAA,mBAAmB,EAAEE,mBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,EAQIW,UARJ,CARF,CADD;AAsBD;;AAED,eAAef,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport imagen from './cryptomonedas.png';\nimport axios from 'axios';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\n\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width:992px) {\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-top:80px;\n\n  &::after {\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n  }\n`;\n\nfunction App() {\n\n  const [moneda,guardarMoneda] = useState('');\n  const [criptomoneda,guardarCriptomoneda] = useState('');\n  const [resultado,guardarResultado] = useState({});\n  const [cargando,guardarCargando] = useState(false);\n\n  useEffect(() => {\n\n    const cotizarCriptomoneda = async () => {\n      // Evitamos la ejecucion la primera vez\n      if(moneda==='') return;  \n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url);\n\n      // Mostrar spinner\n      guardarCargando(true);\n\n      setTimeout(() => {\n        // Ocultar spinner\n        guardarCargando(false);\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 2000);\n\n    };\n    cotizarCriptomoneda();\n\n  }, [moneda, criptomoneda] );\n\n  // Mostrar spinner o resultado\n  const componente = (cargando) ? <Spinner/> :  <Cotizacion resultado={resultado} />\n\n  return (\n   <Contenedor>\n     <div> \n      <Imagen\n        src={imagen}\n        alt=\"imagen cripto\"\n      /> \n     </div>\n\n     <div>\n        <Heading>Cotizador de Criptomonedas al instante</Heading>\n\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n       \n     </div>\n   </Contenedor>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}