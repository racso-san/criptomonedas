{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitKraken/criptomonedas/src/hooks/useMoneda.js\";\nimport React, { Fragment, useState } from 'react';\n\nconst useMoneda = () => {\n  // State de nuestro custom hook\n  const [state, actualizarState] = useState('');\n\n  const Seleccionar = () => {\n    /*#__PURE__*/\n    React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, \"Moneda\"), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"MXN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"Peso Mexicano\")));\n  }; // Retornar state, interfaz y func que modifica el state\n\n\n  return [state, Seleccionar, actualizarState];\n};\n\nexport default useMoneda;","map":{"version":3,"sources":["/home/usuario/Documentos/GitKraken/criptomonedas/src/hooks/useMoneda.js"],"names":["React","Fragment","useState","useMoneda","state","actualizarState","Seleccionar"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,QAAvB,QAAsC,OAAtC;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAEpB;AACA,QAAM,CAACC,KAAD,EAAOC,eAAP,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtB;AAAA,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAFJ;AAMH,GAPD,CALoB,CAcpB;;;AACA,SAAO,CAACF,KAAD,EAAOE,WAAP,EAAmBD,eAAnB,CAAP;AACH,CAhBD;;AAkBA,eAAeF,SAAf","sourcesContent":["import React,{Fragment,useState} from 'react';\n\n\nconst useMoneda = () => {\n\n    // State de nuestro custom hook\n    const [state,actualizarState] = useState('');\n\n    const Seleccionar = () => {\n        <Fragment>\n            <label>Moneda</label>\n            <select>\n                <option value=\"MXN\">Peso Mexicano</option>\n            </select>\n        </Fragment>\n    };\n\n    // Retornar state, interfaz y func que modifica el state\n    return [state,Seleccionar,actualizarState];\n}   \n \nexport default useMoneda;"]},"metadata":{},"sourceType":"module"}