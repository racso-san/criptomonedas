{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitKraken/criptomonedas/src/hooks/useMoneda.js\";\nimport React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n`;\n\nconst useMoneda = (label, stateInicial, opciones) => {\n  // State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => actualizarState(e.target.value),\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"--Seleccione una opcion--\"), opciones.map(opcion => /*#__PURE__*/React.createElement(\"option\", {\n    key: opcion.codigo,\n    value: opcion.codigo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, opcion.nombre)))); // Retornar state, interfaz y func que modifica el state\n\n\n  return [state, Seleccionar, actualizarState];\n};\n\nexport default useMoneda;","map":{"version":3,"sources":["/home/usuario/Documentos/GitKraken/criptomonedas/src/hooks/useMoneda.js"],"names":["React","Fragment","useState","styled","Label","label","useMoneda","stateInicial","opciones","state","actualizarState","Seleccionar","e","target","value","map","opcion","codigo","nombre"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,QAAvB,QAAsC,OAAtC;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAM;;CAA3B;;AAKA,MAAMC,SAAS,GAAG,CAACD,KAAD,EAAOE,YAAP,EAAoBC,QAApB,KAAiC;AAE/C;AACA,QAAM,CAACC,KAAD,EAAOC,eAAP,IAA0BR,QAAQ,CAACK,YAAD,CAAxC;;AAEA,QAAMI,WAAW,GAAG,mBAChB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,KAAR,CADJ,eAEI;AACI,IAAA,QAAQ,EAAGO,CAAC,IAAIF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;AAEI,IAAA,KAAK,EAAEL,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJJ,EAKKD,QAAQ,CAACO,GAAT,CAAaC,MAAM,iBAChB;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,MAApB;AAA4B,IAAA,KAAK,EAAED,MAAM,CAACC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDD,MAAM,CAACE,MAA1D,CADH,CALL,CAFJ,CADJ,CAL+C,CAqB/C;;;AACA,SAAO,CAACT,KAAD,EAAOE,WAAP,EAAmBD,eAAnB,CAAP;AACH,CAvBD;;AAyBA,eAAeJ,SAAf","sourcesContent":["import React,{Fragment,useState} from 'react';\n\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n`;\n\n\nconst useMoneda = (label,stateInicial,opciones) => {\n\n    // State de nuestro custom hook\n    const [state,actualizarState] = useState(stateInicial);\n\n    const Seleccionar = () => (\n        <Fragment>\n            <label>{label}</label>\n            <select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">--Seleccione una opcion--</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}\n                    </option> \n                ))}\n            </select>\n        </Fragment>\n    );\n\n    // Retornar state, interfaz y func que modifica el state\n    return [state,Seleccionar,actualizarState];\n}   \n \nexport default useMoneda;"]},"metadata":{},"sourceType":"module"}